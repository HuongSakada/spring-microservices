spring:
  h2:
    console.enabled: true
  datasource:
    url: jdbc:h2:~/h2/order_service
    username: sa
    password: password
    driverClassName: org.h2.Driver
  jpa:
    spring.jpa.database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: update
  kafka:
    bootstrapServers: localhost:29092
    topics:
      order: order
    producer:
#      key-serializer: org.apache.kafka.common.serialization.LongSerializer
#      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      streams:
        properties:
          default.deserialization.exception.handler: org.apache.kafka.streams.errors.LogAndContinueExceptionHandler,org.springframework.kafka.streams.RecoveringDeserializationExceptionHandler
    consumer:
#      bootstrapServers: localhost:29092
#      groupId: order_group
#      autoOffsetReset: earliest
#      key-deserializer: org.apache.kafka.common.serialization.LongDeserializer
#      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring:
          json:
            trusted:
              packages: "*"
    streams:
      properties:
        default.key.serde: org.apache.kafka.common.serialization.Serdes$LongSerde
        default.value.serde: org.springframework.kafka.support.serializer.JsonSerde
        spring:
          json:
            trusted:
              packages: "*"
      state-dir: /tmp/kafka-streams/

server:
  port: 8083

#eureka:
#  client:
#    registerWithEureka: true
#    serviceUrl:
#      defaultZone: http://localhost:8761/eureka/